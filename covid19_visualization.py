# -*- coding: utf-8 -*-
"""COVID19_Visualization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yGn8IrEgGWgL-K0L2Kqg-nO-COeNOScd
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import plotly.offline as py
py.init_notebook_mode(connected = True)
import plotly.graph_objs as go
import plotly.express as px
import plotly.io as pio
pio.renderers.default = 'colab'
# %matplotlib inline

from google.colab import files
files.upload()

df1 = pd.read_csv('covid.csv')
df1.head()

from google.colab import files
files.upload()

df2 = pd.read_csv('covid_grouped.csv')
df2.head()

df1.info()

df1.drop(['NewCases','NewDeaths','NewRecovered'], axis = 1,inplace=True)

df1.head()

df1.columns

#TOTAL CASES VS COUNTRIES
px.bar(df1.head(20),x='Country/Region',y='TotalCases',color='TotalCases',height=500,hover_data=['Country/Region','Continent'])

px.bar(df1.head(20),x='Country/Region',y='TotalCases',color='Country/Region',height=500,hover_data=['Country/Region','Continent'])

#TOTAL DEATHS Vs COUNTRIES
px.bar(df1.head(20),x='Country/Region',y='TotalDeaths',color='Country/Region',height=500,hover_data=['Country/Region','Continent'])

#TOTAL RECOVERED vs COUNTRIES
px.bar(df1.head(20),x='Country/Region',y='TotalRecovered',color='TotalRecovered',height=500,hover_data=['Country/Region','Continent'])

#TOTAL TESTS vs COUNTRIES(Orientation)
px.bar(df1.head(20),x='TotalTests',y='Country/Region',color='TotalTests',orientation="h",height=600,hover_data=['Country/Region','Continent'])

px.bar(df1.head(20),x='TotalTests',y='Continent',color='TotalTests',orientation="h",height=300,hover_data=['Country/Region','Continent'])

#TOTAL CASES vs CONTINENT
px.scatter(df1.head(50),x='Continent',y='TotalCases',hover_data=['Country/Region','Continent'],color='TotalCases',size='TotalCases',size_max=80)

px.scatter(df1.head(50),x='Continent',y='TotalCases',hover_data=['Country/Region','Continent'],color='TotalCases',size='TotalCases',size_max=80,log_y=True)

#TOTAL CASES vs CONTINENT
px.scatter(df1.head(50),x='Continent',y='TotalTests',hover_data=['Country/Region','Continent'],color='TotalTests',size='TotalTests',size_max=80,log_y=True)

#TOTAL DEATHS vs CONTINENT
px.scatter(df1.head(50),x='Continent',y='TotalDeaths',hover_data=['Country/Region','Continent'],color='TotalDeaths',size='TotalDeaths',size_max=80,log_y=True)

#TOTAL CASES vs COUNTRIES
px.scatter(df1.head(100),x='Country/Region',y='TotalCases',hover_data=['Country/Region','Continent'],color='TotalCases',size='TotalCases',size_max=80,log_y=True)

#TOTAL RECOVERED vs CONTINENT
px.scatter(df1.head(30),x='Continent',y='TotalRecovered',hover_data=['Country/Region','Continent'],color='TotalRecovered',size_max=80,log_y=True)

px.scatter(df1.head(50),x='Country/Region',y='TotalCases',hover_data=['Country/Region','Continent'],color='Country/Region',size='TotalCases',size_max=80,log_y=True)

#TOTAL DEATHS vs COUNTRIES
px.scatter(df1.head(20),x='Country/Region',y='TotalDeaths',hover_data=['Country/Region','Continent'],color='Country/Region',size='TotalDeaths',size_max=80)

#TOTAL TESTS/1M vs COUNTRIES
px.scatter(df1.head(20),x='Country/Region',y='Tests/1M pop',hover_data=['Country/Region','Continent'],color='Country/Region',size='Tests/1M pop',size_max=80)

px.scatter(df1.head(20),x='Country/Region',y='Tests/1M pop',hover_data=['Country/Region','Continent'],color='Tests/1M pop',size='Tests/1M pop',size_max=80)

#TOTAL CASES vs TOTAL DEATHS
px.scatter(df1.head(20),x='TotalCases',y='TotalDeaths',hover_data=['Country/Region','Continent'],color='TotalDeaths',size='TotalDeaths',size_max=80)

px.scatter(df1.head(20),x='TotalCases',y='TotalDeaths',hover_data=['Country/Region','Continent'],color='TotalDeaths',size='TotalDeaths',size_max=80,log_x=True,log_y=True)

#TOTAL TESTS vs TOTAL CASES
px.scatter(df1.head(20),x='TotalTests',y='TotalCases',hover_data=['Country/Region','Continent'],color='TotalTests',size='TotalTests',size_max=80,log_x=True,log_y=True)

df2.columns

df2.head()

#DATA vs Confirmed
px.bar(df2,x='Date',y='Confirmed',color='Confirmed',hover_data=['Confirmed','Date','Country/Region'],height=400)

px.bar(df2,x='Date',y='Confirmed',color='Confirmed',hover_data=['Confirmed','Date','Country/Region'],log_y=True,height=400)

#DATE vs DEATH
#Line Graph
px.bar(df2,x='Date',y='Deaths',color='Deaths',hover_data=['Confirmed','Date','Country/Region'],log_y=False,height=400)

df_US =df2.loc[df2['Country/Region']=='US']

#Date vs Confirmed(US)
px.bar(df_US,x='Date',y='Confirmed',color='Confirmed',height=400)

#Date vs Recovered(US)
px.bar(df_US,x='Date',y='Recovered',color='Recovered',height=400)

#Date vs Death(US)
px.line(df_US,x='Date',y='Deaths',height=400)

#Date vs Confirmed(US)
px.line(df_US,x='Date',y='Deaths',height=400)

#Date vs New Cases(US)
px.line(df_US,x='Date',y='New cases',height=400)

px.bar(df_US,x='Date',y='New cases',color='New cases',height=400)

px.scatter(df_US,x='Confirmed',y='Deaths',height=400)

df_IN =df2.loc[df2['Country/Region']=='India']

#Date vs Confirmed(India)
px.bar(df_IN,x='Date',y='Confirmed',color='Confirmed',height=400)

#Date vs Recovered(India)
px.bar(df_IN,x='Date',y='Recovered',color='Recovered',height=400)

px.bar(df_IN,x='Date',y='New recovered',color='New recovered',height=400)

#Date vs Death(India)
px.line(df_IN,x='Date',y='Deaths',height=400)

#Date vs Confirmed(India)
px.line(df_IN,x='Date',y='Deaths',height=400)

#Date vs New Cases(India)
px.line(df_IN,x='Date',y='New cases',height=400)

px.bar(df_IN,x='Date',y='New cases',color='New cases',height=400)

px.scatter(df_IN,x='Confirmed',y='New cases',height=400)

#Represent Maps
#Equi rectangular Projection: Total Cases
px.choropleth(df2,locations="iso_alpha",color="Confirmed",hover_name='Country/Region',color_continuous_scale='Reds',animation_frame='Date')

px.choropleth(df2,locations="iso_alpha",color="Confirmed",hover_name='Country/Region',color_continuous_scale='Reds',projection='orthographic',animation_frame='Date')

#Orthographic Projection : Total Deaths
px.choropleth(df2,locations="iso_alpha",color="Deaths",hover_name='Country/Region',color_continuous_scale='Rainbow',animation_frame='Date')

px.choropleth(df2,locations="iso_alpha",color="Deaths",hover_name='Country/Region',color_continuous_scale='Rainbow',projection='orthographic',animation_frame='Date')

#Equirectangular Projection : Total Recovered
px.choropleth(df2,locations="iso_alpha",color="Recovered",hover_name='Country/Region',color_continuous_scale='RdYlGn',projection='natural earth',animation_frame='Date')

#Animations
#Bar Animation : Total Cases
px.bar(df2,x='WHO Region',y='Confirmed',color='WHO Region',animation_frame='Date',hover_name='Country/Region')

#Bar Aniamtion : New Cases
px.bar(df2,x='WHO Region',y='New cases',color='WHO Region',animation_frame='Date',hover_name='Country/Region')



